#!/bin/bash
# chkconfig:         2345 90 10
# description:       Service runner for Rebar
### BEGIN INIT INFO
# Provides:          digitalrebar-webserver
# Required-Start:    $syslog $network $named postrgesql-9.3
# Required-Stop:     $syslog $network $named postgresql-9.3
# Should-Start:      xinetd
# Should-Stop:       xinetd
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start the DigitalRebar Web application
# Description:       Manages the DigitalRebar Web application
### END INIT INFO

PATH="/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin"

# if we started in development, make sure we're running development
if [[ -f /tmp/development.txt ]]; then
    RAILS_ENV=development
else
    [[ $RAILS_ENV ]] || RAILS_ENV=production
fi

export RAILS_ENV
if [[ -f /etc/redhat-release || -f /etc/centos-release ]]; then
    OS=redhat
elif [[ -d /etc/apt ]]; then
    OS=ubuntu
elif [[ -f /etc/SuSE-release ]]; then
    OS=suse
fi

case $RAILS_ENV in
    development) PUMA_CFG="puma-dev.cfg";;
    production)  PUMA_CFG="puma.cfg";;
    test)        PUMA_CFG="puma-test.cfg";;
esac

if [[ ! -f /var/run/rebar/server.key ]]; then
    openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out /var/run/rebar/server.key
    openssl req -new -key /var/run/rebar/server.key -out /var/run/rebar/server.csr -subj "/C=US/ST=Texas/L=Austin/O=RackN/OU=RebarAPI/CN=neode.net"
    openssl x509 -req -days 365 -in /var/run/rebar/server.csr -signkey /var/run/rebar/server.key -out /var/run/rebar/server.crt
    rm /var/run/rebar/server.csr
fi
chmod 400 /var/run/rebar/server.key /var/run/rebar/server.crt
chown rebar:rebar /var/run/rebar/server.key /var/run/rebar/server.crt

if [[ -f /etc/rebar.install.key ]]; then
    read REBAR_KEY < /etc/rebar.install.key
    export REBAR_KEY
fi

as_rebar() (
    su -l -c "cd /opt/digitalrebar/core/rails; RAILS_ENV=$RAILS_ENV $*" rebar
)

que_worker() {
    queue="$1"
    shift
    workers="$1"
    shift
    for ((i=0; i < workers; i++)) ; do
        cmd="bundle exec que -q $queue -w 1 -l debug ./config/environment.rb"
        as_rebar "$cmd" </dev/zero 2>&1 &>> "/var/log/rebar/$queue.$i.log" &
    done
}

start_workers() {
    que_worker NodeRoleRunner 10
    que_worker HighPriorityRunner 2
    disown -a
}

stop_workers() {
    pkill -f bin/que
    COUNT=0
    while pgrep -l -f bin/que 2>&1 >/dev/null ;
    do
        sleep 1
        COUNT=`expr $COUNT + 1`
        if [[ $COUNT -gt 30 ]] ;
        then
            pkill -9 -f bin/que
        fi
    done
}

status_workers() {
    pgrep -l -f bin/que
}

start(){
    if status; then
        echo "Rebar is already running"
        return 1
    fi
    rm /opt/digitalrebar/core/rails/tmp/pids/*
    as_rebar bundle exec puma -d -C $PUMA_CFG
    start_workers
}

stop() {
    as_rebar bundle exec pumactl -F $PUMA_CFG stop
    stop_workers
}

restart() {
    stop; start
}

status() {
    as_rebar bundle exec pumactl -F $PUMA_CFG status && status_workers
}

mkdir -p /var/run/rebar && chown rebar:rebar /var/run/rebar

case "$1" in
    start) start;;
    stop) stop;;
    status) status;;
    restart) restart;;
    *)
        echo "Usage: $0 {start|stop|status|restart}"
        exit 1
        ;;
esac
