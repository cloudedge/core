= form_for :role, :'data-remote' => true, :url => role_path(@role.id), :html => { :method=>:put, :'data-type' => 'html',  :class => "formtastic" } do |f|

  %div{:style => 'float:right'}
    %input.button{:type => "submit", :name => "save", :value => t('.save')}
  %h1= @role.name

  %dl
    %dt= t '.description' 
    %dd= @role.description

    - unless params.include? :form
      %dt= t '.jig' 
      %dd= link_to @role.jig_name, jig_path(@role.jig_name)
      %dt= t '.barclamp' 
      %dd= link_to @role.barclamp.name, barclamp_path(@role.barclamp.id), :title=>@role.barclamp.description
      - if Rails.env.development?
        %dt= t '.type'
        %dd= "[#{@role.class.to_s}]"
      - if @role.github and (current_user.settings(:docs).sources rescue false)
        %dt= t '.source'
        %dd= link_to @role.github, @role.github
      %dt= t '.icon'
      %dd= link_to @role.icon, "https://design.google.com/icons/#ic_#{@role.icon}"
      %dt= t '.flags'
      %dd
        = t '.library' if @role.library 
        = t '.discovery' if @role.discovery
        = t '.implicit' if @role.implicit
        = t '.bootstrap' if @role.bootstrap
        = t '.abstract' if @role.abstract
        = t '.service' if @role.service

  .clear

  - begin 
    - specific = "barclamp_#{@role.barclamp.name}/node_roles/#{@role.name}"
    - general = "barclamp_#{@role.barclamp.name}/roles/role"
    - template = @role.template.to_json
  - rescue Exception => moderror
    %p= t '.model_error', :error=>moderror.message

  - unless params.include? :form
    - outrole = nil
    %table{:width=>'100%'}
      %tr
        %td
          %h3= t '.upstream'
        %td{:align=>'right', :id=>'addcell'}
          - if @role.node_roles.count == 0
            - outrole = @role.id
            = t '.parent'
            = select :add, :parent, options_for_select(Role.all.sort_by{|r| r.name}.map{|r| r.name}, '')
            = link_to t('add'), "javascript:add_parent_role()", :class => 'button'

    = render :partial => "index", :locals => { :list => @role.parents, :jig_name => nil, :outter_role => outrole }

%h3= t '.attributes'

- if @role.attribs.count == 0
  =t 'no_items'
- else
  %table.data.box
    %thead
      %tr.node{ :class => cycle(:odd, :even) }
        %th= t '.attrib'
        %th= t '.description'
        %th= 'Default'
        %th= t '.map'
    %tbdoy
      - @role.attribs.each do |a|
        %tr{ :class => cycle(:odd, :even) }
          %td= link_to a.name, attrib_path(a.id)
          %td= a.description
          %td= a.default["value"] 
          %td= a.map

%h3= t '.wanted'

- if @role.wanted_attribs.count == 0
  =t 'no_items'
- else
  %table.data.box
    %thead
      %tr.node{ :class => cycle(:odd, :even) }
        %th= t '.attrib'
        %th= t '.description'
        %th= "Provided By"
    %tbdoy
      - @role.wanted_attribs.each do |a|
        %tr{ :class => cycle(:odd, :even) }
          %td= link_to a.name, attrib_path(a.id)
          %td= a.description
          - if a.role
            %td= link_to a.role.name, role_path(a.role.name)
          - else
            %td= 'Node'

- inuse = @role.node_roles.sort
%h3
  = t '.inuse'
  - if inuse.length > 0
    - nrlist = inuse.map { |nr| nr.id }.join(",")
    %raw_button{:style => 'float:right'}
      = link_to t('.reapply'), "javascript:retry_all('#{nrlist}')", :class => 'button'

- if inuse.length == 0
  =t 'no_items'
- else
  = render :partial=>'node_roles/index', :locals => { :list => inuse }

  .clear

  :javascript

    function retry_all(nr_ids) {
      var ids = nr_ids.split(",");
      for (var id of ids) {
        console.log("/api/v2/node_roles/"+id+"/retry");
        $.ajax({url: "/api/v2/node_roles/"+id+"/retry", type: "PUT"})
      };
      location.reload();
    }

- if @role.node_roles.count == 0

  :javascript

    function add_parent_role() {
      var provider = $("#add_parent").val();
      console.debug(provider);
      $.ajax({url: "/api/v2/roles/#{@role.id}/parents", data: {'id': provider}, type: "post" });
      location.reload();
    }

    function delete_parent_role(role, parent) {
      $.ajax({url: "/api/v2/roles/"+role+"/parents", data: {'id': parent}, type: "delete" });
      location.reload();
    };
